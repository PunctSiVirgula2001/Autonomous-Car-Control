<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__i2_c__accelerometer_sensor_8c_source" xml:lang="en-US">
<title>I2C_accelerometerSensor.c</title>
<indexterm><primary>src/I2C/drivers/I2C_accelerometerSensor.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;I2C_accelerometer.c</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00004"/>00004 <emphasis role="comment">&#32;*&#32;&#32;Created&#32;on:&#32;14&#32;iun.&#32;2024</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;Author:&#32;racov</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00006"/>00006 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00007"/>00007 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__i2_c__accelerometer_sensor_8h">I2C_accelerometerSensor.h</link>&quot;</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00009"/>00009 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00010"/>00010 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00011"/>00011 <emphasis role="comment">/*&#32;ADXL&#32;345&#32;accelerometer&#32;sensor&#32;*/</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00012"/>00012 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00013"/><link linkend="__i2_c__accelerometer_sensor_8h_1af4369ee1e11eacb96049536d1b18a94e">00013</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__i2_c__accelerometer_sensor_8c_1af4369ee1e11eacb96049536d1b18a94e">I2C_adxl345_init</link>(<link linkend="__i2_c__common_8h_1a1aec57033a8a180b854b479b31a7a812">I2C_dev_handles</link>&#32;device_handle)&#32;{
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1a122086f1509f736c9ccde786beb5b419">I2C_writeRegister8bit</link>(device_handle,&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1aa287a6b30dc1c628ba7e0418d0252d07ad83cbbc650644ee82ed5bf506679e5b2">ADXL345_REG_POWER_CTL</link>,&#32;0x08);&#32;&#32;<emphasis role="comment">//&#32;Bit&#32;3&#32;high&#32;to&#32;start&#32;measuring</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1a122086f1509f736c9ccde786beb5b419">I2C_writeRegister8bit</link>(device_handle,&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1aa287a6b30dc1c628ba7e0418d0252d07a0231a4c09c9ed493135c76ab19ccfba5">ADXL345_REG_DATA_FORMAT</link>,&#32;0x0B);&#32;<emphasis role="comment">//&#32;Plus/minus&#32;16g,&#32;13-bit&#32;mode</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1a122086f1509f736c9ccde786beb5b419">I2C_writeRegister8bit</link>(device_handle,&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1aa287a6b30dc1c628ba7e0418d0252d07a65f0173f9548dc0486905e9969dc5a70">ADXL345_REG_BW_RATE</link>,&#32;0x0B);&#32;<emphasis role="comment">//&#32;Set&#32;data&#32;rate&#32;to&#32;100&#32;Hz&#32;(example)</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00017"/>00017 }
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00018"/>00018 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00019"/><link linkend="__i2_c__accelerometer_sensor_8h_1aeac395349fd0cb9b64e9dba9799e64e9">00019</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__i2_c__accelerometer_sensor_8c_1aeac395349fd0cb9b64e9dba9799e64e9">I2C_read_adxl345_data</link>(<link linkend="__i2_c__common_8h_1a1aec57033a8a180b854b479b31a7a812">I2C_dev_handles</link>&#32;device_handle,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;x,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;y,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;z)&#32;{
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00020"/>00020 &#32;&#32;&#32;&#32;uint8_t&#32;data[6];&#32;&#32;<emphasis role="comment">//&#32;Array&#32;to&#32;hold&#32;the&#32;raw&#32;sensor&#32;data</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;previous&#32;values</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;prev_x&#32;=&#32;0;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;prev_y&#32;=&#32;0;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;prev_z&#32;=&#32;0;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;resolution&#32;=&#32;1&lt;&lt;8;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;6&#32;bytes&#32;from&#32;the&#32;ADXL345&#32;starting&#32;from&#32;DATAX0</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00027"/>00027 &#32;&#32;&#32;&#32;uint16_t&#32;temp;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00028"/>00028 &#32;&#32;&#32;&#32;temp&#32;=&#32;<link linkend="__i2_c__common_8h_1a795f59e507c5791c2e125c2f9a34f831">I2C_readRegister16bit</link>(device_handle,&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1aa287a6b30dc1c628ba7e0418d0252d07a5edb88832857debe694b4c95d5db314a">ADXL345_REG_DATAX0</link>);
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;data[0]&#32;=(uint8_t)(temp&gt;&gt;8);
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00030"/>00030 &#32;&#32;&#32;&#32;data[1]&#32;=(uint8_t)temp;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;temp&#32;=&#32;<link linkend="__i2_c__common_8h_1a795f59e507c5791c2e125c2f9a34f831">I2C_readRegister16bit</link>(device_handle,&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1aa287a6b30dc1c628ba7e0418d0252d07adffef7f52d5ba385c51d7a806784fbec">ADXL345_REG_DATAY0</link>);
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;data[2]&#32;=(uint8_t)(temp&gt;&gt;8);
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;data[3]&#32;=(uint8_t)temp;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;temp&#32;=&#32;<link linkend="__i2_c__common_8h_1a795f59e507c5791c2e125c2f9a34f831">I2C_readRegister16bit</link>(device_handle,&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1aa287a6b30dc1c628ba7e0418d0252d07a7ffb5a75ad1a0c335264f2188b081f2b">ADXL345_REG_DATAZ0</link>);
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;data[4]&#32;=(uint8_t)(temp&gt;&gt;8);
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;data[5]&#32;=(uint8_t)temp;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00037"/>00037 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Combine&#32;the&#32;bytes&#32;into&#32;integers</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;raw_x&#32;&#32;=&#32;(double)((int16_t)(data[1]&#32;&lt;&lt;&#32;8&#32;|&#32;data[0]))/resolution;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;raw_y&#32;&#32;=&#32;(double)((int16_t)(data[3]&#32;&lt;&lt;&#32;8&#32;|&#32;data[2]))/resolution;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;raw_z&#32;&#32;=&#32;(double)((int16_t)(data[5]&#32;&lt;&lt;&#32;8&#32;|&#32;data[4]))/resolution;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00042"/>00042 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;low-pass&#32;filter</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00044"/>00044 &#32;&#32;&#32;*x&#32;=&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1af5abd28c44c29b7397c84f1fec4b1d84">ALPHA</link>&#32;*&#32;raw_x&#32;+&#32;(1&#32;-&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1af5abd28c44c29b7397c84f1fec4b1d84">ALPHA</link>)&#32;*&#32;prev_x;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00045"/>00045 &#32;&#32;&#32;*y&#32;=&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1af5abd28c44c29b7397c84f1fec4b1d84">ALPHA</link>&#32;*&#32;raw_y&#32;+&#32;(1&#32;-&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1af5abd28c44c29b7397c84f1fec4b1d84">ALPHA</link>)&#32;*&#32;prev_y;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00046"/>00046 &#32;&#32;&#32;*z&#32;=&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1af5abd28c44c29b7397c84f1fec4b1d84">ALPHA</link>&#32;*&#32;raw_z&#32;+&#32;(1&#32;-&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1af5abd28c44c29b7397c84f1fec4b1d84">ALPHA</link>)&#32;*&#32;prev_z;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00047"/>00047 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00048"/>00048 &#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;previous&#32;values</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00049"/>00049 &#32;&#32;&#32;prev_x&#32;=&#32;*x;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00050"/>00050 &#32;&#32;&#32;prev_y&#32;=&#32;*y;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00051"/>00051 &#32;&#32;&#32;prev_z&#32;=&#32;*z;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00052"/>00052 }
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00053"/>00053 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00054"/><link linkend="__i2_c__accelerometer_sensor_8h_1a5daa89461a8c123f61a7e7e89a799bb2">00054</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__i2_c__accelerometer_sensor_8c_1a5daa89461a8c123f61a7e7e89a799bb2">I2C_adxl345_setRate</link>(<link linkend="__i2_c__common_8h_1a1aec57033a8a180b854b479b31a7a812">I2C_dev_handles</link>&#32;device_handle,&#32;<emphasis role="keywordtype">double</emphasis>&#32;rate)&#32;{
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00055"/>00055 &#32;&#32;&#32;&#32;uint8_t&#32;_b,&#32;_s;&#32;<emphasis role="comment">//&#32;Variables&#32;to&#32;hold&#32;register&#32;values</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;v&#32;=&#32;(int)&#32;(rate&#32;/&#32;6.25);&#32;<emphasis role="comment">//&#32;Convert&#32;the&#32;desired&#32;rate&#32;to&#32;a&#32;value&#32;used&#32;by&#32;the&#32;sensor</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;r&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;Variable&#32;to&#32;determine&#32;the&#32;bit&#32;position&#32;for&#32;the&#32;rate&#32;setting</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00058"/>00058 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;rate&#32;setting&#32;value&#32;based&#32;on&#32;the&#32;input&#32;rate</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;loop&#32;determines&#32;how&#32;many&#32;times&#32;the&#32;value&#32;can&#32;be&#32;shifted&#32;right</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;before&#32;it&#32;becomes&#32;zero,&#32;effectively&#32;calculating&#32;the&#32;position&#32;of&#32;the&#32;highest&#32;set&#32;bit.</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(v&#32;&gt;&gt;=&#32;1)&#32;{
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r++;
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00065"/>00065 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;valid&#32;range&#32;for&#32;r&#32;is&#32;0&#32;to&#32;9,&#32;corresponding&#32;to&#32;available&#32;data&#32;rate&#32;settings</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;&lt;=&#32;9)&#32;{
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;current&#32;value&#32;of&#32;the&#32;BW_RATE&#32;register</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;BW_RATE&#32;register&#32;controls&#32;the&#32;data&#32;rate&#32;and&#32;power&#32;mode&#32;of&#32;the&#32;sensor</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_b&#32;=&#32;(uint8_t)(<link linkend="__i2_c__common_8h_1a795f59e507c5791c2e125c2f9a34f831">I2C_readRegister16bit</link>(device_handle,&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1aa287a6b30dc1c628ba7e0418d0252d07a65f0173f9548dc0486905e9969dc5a70">ADXL345_REG_BW_RATE</link>)&gt;&gt;8);
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00071"/>00071 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;new&#32;value&#32;for&#32;the&#32;BW_RATE&#32;register</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;lower&#32;4&#32;bits&#32;of&#32;the&#32;BW_RATE&#32;register&#32;(D3-D0)&#32;determine&#32;the&#32;output&#32;data&#32;rate</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;preserve&#32;the&#32;upper&#32;4&#32;bits&#32;(D7-D4)&#32;by&#32;masking&#32;with&#32;0xF0&#32;and&#32;OR&#32;with&#32;the&#32;new&#32;rate&#32;setting</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_s&#32;=&#32;(uint8_t)&#32;(r&#32;+&#32;6)&#32;|&#32;(_b&#32;&amp;&#32;0xF0);
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00076"/>00076 
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;the&#32;new&#32;value&#32;to&#32;the&#32;BW_RATE&#32;register</emphasis>
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1a122086f1509f736c9ccde786beb5b419">I2C_writeRegister8bit</link>(device_handle,&#32;<link linkend="__i2_c__accelerometer_sensor_8h_1aa287a6b30dc1c628ba7e0418d0252d07a65f0173f9548dc0486905e9969dc5a70">ADXL345_REG_BW_RATE</link>,&#32;_s);
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00079"/>00079 &#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__accelerometer_sensor_8c_source_1l00080"/>00080 }
</programlisting></section>
