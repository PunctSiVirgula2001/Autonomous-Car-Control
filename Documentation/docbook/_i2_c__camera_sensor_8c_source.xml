<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__i2_c__camera_sensor_8c_source" xml:lang="en-US">
<title>I2C_cameraSensor.c</title>
<indexterm><primary>src/I2C/drivers/I2C_cameraSensor.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__i2_c__camera_sensor_8c_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;I2C_cameraSensor.c</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00004"/>00004 <emphasis role="comment">&#32;*&#32;&#32;Created&#32;on:&#32;14&#32;iun.&#32;2024</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;Author:&#32;racov</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00006"/>00006 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00007"/>00007 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__i2_c__camera_sensor_8h">I2C_cameraSensor.h</link>&quot;</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__motor_and_servo_control_8h">MotorAndServoControl.h</link>&quot;</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__p_i_d_8h">PID.h</link>&quot;</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;esp_log.h&quot;</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00012"/>00012 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00013"/><link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">00013</link> <emphasis role="preprocessor">#define&#32;TAG&#32;&quot;PIXY2&quot;</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00014"/>00014 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00015"/><link linkend="_main_8c_1ae0a77b0cf83af5755b406387533338e7">00015</link> QueueHandle_t&#32;<link linkend="__i2_c__camera_sensor_8c_1ae0a77b0cf83af5755b406387533338e7">autonomousModeControlPixyQueue</link>;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00016"/>00016 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00017"/>00017 <emphasis role="comment">//&#32;Function&#32;to&#32;send&#32;a&#32;request&#32;packet&#32;to&#32;Pixy2&#32;camera</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00018"/><link linkend="__i2_c__camera_sensor_8h_1a017600a7956da0f432bbd877932f6ac2">00018</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__i2_c__camera_sensor_8c_1a017600a7956da0f432bbd877932f6ac2">requestPixy2Version</link>(<link linkend="__i2_c__common_8h_1a1aec57033a8a180b854b479b31a7a812">I2C_dev_handles</link>&#32;pixy2_handle)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00019"/>00019 &#32;&#32;&#32;&#32;uint8_t&#32;requestPacket[4]&#32;=&#32;{0xae,&#32;0xc1,&#32;0x0e,&#32;0x00};
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00020"/>00020 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Select&#32;the&#32;Pixy2&#32;camera&#32;channel&#32;on&#32;the&#32;multiplexer</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1aef48213de5230add491038aa4c4eb05a">I2C_select_multiplexer_channel</link>(<link linkend="__i2_c__common_8h_1a70c4c5f41ff220dd7e6a2819a3bcb1c6a08bdbe34ce8659d94b4f5e182a43d125">I2C_pixy2_camera_mux</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00023"/>00023 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transmit&#32;the&#32;request&#32;packet&#32;to&#32;Pixy2</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1acd828c8912cd4c39d94408126b8ac7db">I2C_transmit</link>(pixy2_handle,&#32;requestPacket,&#32;<emphasis role="keyword">sizeof</emphasis>(requestPacket));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00026"/>00026 &#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Sent&#32;request&#32;packet&#32;to&#32;Pixy2&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00027"/>00027 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prepare&#32;to&#32;receive&#32;the&#32;response</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;uint8_t&#32;responsePacket[20];&#32;<emphasis role="comment">//&#32;Adjust&#32;size&#32;based&#32;on&#32;expected&#32;response&#32;length</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00030"/>00030 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Receive&#32;the&#32;response&#32;packet&#32;from&#32;Pixy2</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1aee26da50da18a761354c3d05c6ab0145">I2C_receive</link>(pixy2_handle,&#32;responsePacket,&#32;<emphasis role="keyword">sizeof</emphasis>(responsePacket));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00033"/>00033 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Print&#32;the&#32;response&#32;for&#32;debugging</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Received&#32;response&#32;packet&#32;from&#32;Pixy2:&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<emphasis role="keyword">sizeof</emphasis>(responsePacket);&#32;i++)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;0x%02x&#32;&quot;</emphasis>,&#32;responsePacket[i]);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00038"/>00038 &#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00039"/>00039 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Parse&#32;and&#32;print&#32;the&#32;version&#32;information&#32;from&#32;the&#32;response&#32;packet</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(responsePacket[0]&#32;==&#32;0xaf&#32;&amp;&amp;&#32;responsePacket[1]&#32;==&#32;0xc1)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Checksum&#32;sync&#32;bytes&#32;matched&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(responsePacket[2]&#32;==&#32;0x0f)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;This&#32;is&#32;a&#32;different&#32;response&#32;type:&#32;0x0f&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;specific&#32;handling&#32;for&#32;0x0f&#32;response&#32;type&#32;if&#32;known</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(responsePacket[2]&#32;==&#32;0x0e)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Version&#32;response&#32;type&#32;matched&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Hardware&#32;Version:&#32;%d.%d&quot;</emphasis>,&#32;responsePacket[6],&#32;responsePacket[7]);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Firmware&#32;Version:&#32;%d.%d&quot;</emphasis>,&#32;responsePacket[8],&#32;responsePacket[9]);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Firmware&#32;Build&#32;Number:&#32;%d&quot;</emphasis>,&#32;(responsePacket[10]&#32;|&#32;(responsePacket[11]&#32;&lt;&lt;&#32;8)));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Firmware&#32;Type:&#32;&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;12;&#32;i&#32;&lt;&#32;12&#32;+&#32;10;&#32;i++)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;%c&quot;</emphasis>,&#32;responsePacket[i]);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Unexpected&#32;response&#32;type:&#32;0x%02x&quot;</emphasis>,&#32;responsePacket[2]);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Invalid&#32;response&#32;from&#32;Pixy2&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00060"/>00060 &#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00061"/>00061 }
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00062"/>00062 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00063"/><link linkend="__i2_c__camera_sensor_8c_1a787fec0fc98224e131b01cdefb3cb8ed">00063</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__i2_c__camera_sensor_8c_1a787fec0fc98224e131b01cdefb3cb8ed">setPixy2CameraBrightness</link>(<link linkend="__i2_c__common_8h_1a1aec57033a8a180b854b479b31a7a812">I2C_dev_handles</link>&#32;pixy2_handle,&#32;uint8_t&#32;brightness)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00064"/>00064 &#32;&#32;&#32;&#32;uint8_t&#32;requestPacket[5]&#32;=&#32;{0xae,&#32;0xc1,&#32;<link linkend="__i2_c__camera_sensor_8h_1ab2b9b7098b2db06a45d0c994bad5f259ae6abbc9b8a52365941c9a9382d70e223">PIXY2_REQUEST_SET_CAMERA_BRIGHTNESS</link>,&#32;0x01,&#32;brightness};
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00065"/>00065 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Select&#32;the&#32;Pixy2&#32;camera&#32;channel&#32;on&#32;the&#32;multiplexer</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1aef48213de5230add491038aa4c4eb05a">I2C_select_multiplexer_channel</link>(<link linkend="__i2_c__common_8h_1a70c4c5f41ff220dd7e6a2819a3bcb1c6a08bdbe34ce8659d94b4f5e182a43d125">I2C_pixy2_camera_mux</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00068"/>00068 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transmit&#32;the&#32;request&#32;packet&#32;to&#32;Pixy2</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1acd828c8912cd4c39d94408126b8ac7db">I2C_transmit</link>(pixy2_handle,&#32;requestPacket,&#32;<emphasis role="keyword">sizeof</emphasis>(requestPacket));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00071"/>00071 &#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Sent&#32;set&#32;camera&#32;brightness&#32;request&#32;to&#32;Pixy2&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00072"/>00072 }
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00073"/>00073 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00074"/>00074 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00075"/><link linkend="__i2_c__camera_sensor_8h_1a7605d4b46b66c3378b326dbd298af8eb">00075</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__i2_c__camera_sensor_8c_1a7605d4b46b66c3378b326dbd298af8eb">setPixy2LED</link>(<link linkend="__i2_c__common_8h_1a1aec57033a8a180b854b479b31a7a812">I2C_dev_handles</link>&#32;pixy2_handle,&#32;uint8_t&#32;r,&#32;uint8_t&#32;g,&#32;uint8_t&#32;b)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00076"/>00076 &#32;&#32;&#32;&#32;uint8_t&#32;requestPacket[7]&#32;=&#32;{0xae,&#32;0xc1,&#32;<link linkend="__i2_c__camera_sensor_8h_1ab2b9b7098b2db06a45d0c994bad5f259a953d9ce999954e3e4c87a9371ceb1ba7">PIXY2_REQUEST_SET_LED</link>,&#32;0x03,&#32;r,&#32;g,&#32;b};
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00077"/>00077 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Select&#32;the&#32;Pixy2&#32;camera&#32;channel&#32;on&#32;the&#32;multiplexer</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1aef48213de5230add491038aa4c4eb05a">I2C_select_multiplexer_channel</link>(<link linkend="__i2_c__common_8h_1a70c4c5f41ff220dd7e6a2819a3bcb1c6a08bdbe34ce8659d94b4f5e182a43d125">I2C_pixy2_camera_mux</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00080"/>00080 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transmit&#32;the&#32;request&#32;packet&#32;to&#32;Pixy2</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1acd828c8912cd4c39d94408126b8ac7db">I2C_transmit</link>(pixy2_handle,&#32;requestPacket,&#32;<emphasis role="keyword">sizeof</emphasis>(requestPacket));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00083"/>00083 &#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Sent&#32;set&#32;LED&#32;request&#32;to&#32;Pixy2&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00084"/>00084 }
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00085"/>00085 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00086"/><link linkend="__i2_c__camera_sensor_8h_1a3a0289ef7a1f4c39e1136f055d5aa52c">00086</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__i2_c__camera_sensor_8c_1a3a0289ef7a1f4c39e1136f055d5aa52c">setPixy2Lamp</link>(<link linkend="__i2_c__common_8h_1a1aec57033a8a180b854b479b31a7a812">I2C_dev_handles</link>&#32;pixy2_handle,&#32;uint8_t&#32;upper,&#32;uint8_t&#32;lower)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00087"/>00087 &#32;&#32;&#32;&#32;uint8_t&#32;requestPacket[6]&#32;=&#32;{0xae,&#32;0xc1,&#32;<link linkend="__i2_c__camera_sensor_8h_1ab2b9b7098b2db06a45d0c994bad5f259adec9e56218fb314f4ea44cb2e9147b52">PIXY2_REQUEST_SET_LAMP</link>,&#32;0x02,&#32;upper,&#32;lower};
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00088"/>00088 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Select&#32;the&#32;Pixy2&#32;camera&#32;channel&#32;on&#32;the&#32;multiplexer</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1aef48213de5230add491038aa4c4eb05a">I2C_select_multiplexer_channel</link>(<link linkend="__i2_c__common_8h_1a70c4c5f41ff220dd7e6a2819a3bcb1c6a08bdbe34ce8659d94b4f5e182a43d125">I2C_pixy2_camera_mux</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00091"/>00091 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transmit&#32;the&#32;request&#32;packet&#32;to&#32;Pixy2</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1acd828c8912cd4c39d94408126b8ac7db">I2C_transmit</link>(pixy2_handle,&#32;requestPacket,&#32;<emphasis role="keyword">sizeof</emphasis>(requestPacket));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00094"/>00094 &#32;&#32;&#32;&#32;ESP_LOGI(<link linkend="__i2_c__camera_sensor_8c_1afc3d101f633a076cc1ca84b85b6224b2">TAG</link>,&#32;<emphasis role="stringliteral">&quot;Sent&#32;set&#32;lamp&#32;request&#32;to&#32;Pixy2&quot;</emphasis>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00095"/>00095 }
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00096"/>00096 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00097"/>00097 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00098"/><link linkend="__i2_c__camera_sensor_8c_1af4f906437da52520077add92dc3de52e">00098</link> <emphasis role="preprocessor">#define&#32;MAX_VECTORS&#32;100</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00099"/>00099 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00100"/><link linkend="__i2_c__camera_sensor_8h_1a59aa0718e545daa3e789822a7083071a">00100</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__i2_c__camera_sensor_8c_1a59aa0718e545daa3e789822a7083071a">getPixy2Lines</link>(<link linkend="__i2_c__common_8h_1a1aec57033a8a180b854b479b31a7a812">I2C_dev_handles</link>&#32;pixy2_handle,&#32;uint8_t&#32;features,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;wait,&#32;<link linkend="_struct_pixy2_lines">Pixy2Lines</link>&#32;*<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00101"/>00101 &#32;&#32;&#32;&#32;uint8_t&#32;requestPacket[6]&#32;=&#32;{0xae,&#32;0xc1,&#32;48,&#32;2,&#32;features,&#32;wait};
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00102"/>00102 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Select&#32;the&#32;Pixy2&#32;camera&#32;channel&#32;on&#32;the&#32;multiplexer</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1aef48213de5230add491038aa4c4eb05a">I2C_select_multiplexer_channel</link>(<link linkend="__i2_c__common_8h_1a70c4c5f41ff220dd7e6a2819a3bcb1c6a08bdbe34ce8659d94b4f5e182a43d125">I2C_pixy2_camera_mux</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00105"/>00105 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transmit&#32;the&#32;request&#32;packet&#32;to&#32;Pixy2</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1acd828c8912cd4c39d94408126b8ac7db">I2C_transmit</link>(pixy2_handle,&#32;requestPacket,&#32;<emphasis role="keyword">sizeof</emphasis>(requestPacket));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="comment">//ESP_LOGI(TAG,&#32;&quot;Sent&#32;get&#32;main&#32;features&#32;request&#32;to&#32;Pixy2&quot;);</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00109"/>00109 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prepare&#32;to&#32;receive&#32;the&#32;response</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00111"/>00111 &#32;&#32;&#32;&#32;uint8_t&#32;responsePacket[100];&#32;<emphasis role="comment">//&#32;Adjust&#32;size&#32;based&#32;on&#32;expected&#32;response&#32;length</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00112"/>00112 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Receive&#32;the&#32;response&#32;packet&#32;from&#32;Pixy2</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<link linkend="__i2_c__common_8h_1aee26da50da18a761354c3d05c6ab0145">I2C_receive</link>(pixy2_handle,&#32;responsePacket,&#32;<emphasis role="keyword">sizeof</emphasis>(responsePacket));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00115"/>00115 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;the&#32;number&#32;of&#32;vectors&#32;to&#32;0</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>&#32;=&#32;0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00118"/>00118 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Validate&#32;sync&#32;and&#32;packet&#32;type</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(responsePacket[0]&#32;==&#32;0xaf&#32;&amp;&amp;&#32;responsePacket[1]&#32;==&#32;0xc1&#32;&amp;&amp;&#32;responsePacket[2]&#32;==&#32;49)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;payloadLength&#32;=&#32;responsePacket[3];&#32;<emphasis role="comment">//&#32;payload&#32;length&#32;is&#32;1&#32;byte</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00122"/>00122 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;total&#32;length&#32;to&#32;read</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;totalLength&#32;=&#32;4&#32;+&#32;payloadLength;&#32;<emphasis role="comment">//&#32;Includes&#32;the&#32;headers&#32;before&#32;payload</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00125"/>00125 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;6;&#32;<emphasis role="comment">//&#32;Start&#32;after&#32;the&#32;checksum&#32;(bytes&#32;4-5)</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00127"/>00127 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(index&#32;&lt;&#32;totalLength)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;featureType&#32;=&#32;responsePacket[index];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;featureLength&#32;=&#32;responsePacket[index&#32;+&#32;1];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t*&#32;featureData&#32;=&#32;&amp;responsePacket[index&#32;+&#32;2];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00132"/>00132 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Loop&#32;through&#32;each&#32;vector&#32;in&#32;this&#32;feature</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(featureType&#32;==&#32;<link linkend="__i2_c__camera_sensor_8h_1ab76fef93704abe0ec57d1ba3ae0b6be9a7228fe4cb5769659b95c27b8c7470d0e">LINE_VECTOR</link>)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numberOfVectors&#32;=&#32;featureLength&#32;/&#32;6;&#32;<emphasis role="comment">//&#32;Each&#32;vector&#32;is&#32;6&#32;bytes</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numberOfVectors;&#32;i++)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;i&#32;*&#32;6;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;x0&#32;=&#32;featureData[offset];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;y0&#32;=&#32;featureData[offset&#32;+&#32;1];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;x1&#32;=&#32;featureData[offset&#32;+&#32;2];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;y1&#32;=&#32;featureData[offset&#32;+&#32;3];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;vectorIndex&#32;=&#32;featureData[offset&#32;+&#32;4];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00143"/>00143 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>&#32;&lt;&#32;<link linkend="__i2_c__camera_sensor_8c_1af4f906437da52520077add92dc3de52e">MAX_VECTORS</link>)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ac06a1294e15a50001ba99cf72749a137">vectors</link>[<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>].<link linkend="_struct_vector_1ad286c393328f04c2e7f2fdb721ae938b">x0</link>&#32;=&#32;x0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ac06a1294e15a50001ba99cf72749a137">vectors</link>[<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>].<link linkend="_struct_vector_1a6d0d6247f5980e8894dd855a38bb113c">y0</link>&#32;=&#32;<link linkend="__i2_c__camera_sensor_8h_1aed89bd71aee8be823e8a20ec4e093c1e">HEIGHT</link>&#32;-&#32;y0;&#32;<emphasis role="comment">//&#32;The&#32;vectors&#32;have&#32;the&#32;coordinate&#32;starting&#32;in&#32;the&#32;top-left&#32;corner.</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ac06a1294e15a50001ba99cf72749a137">vectors</link>[<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>].<link linkend="_struct_vector_1a71f1089b13834924fe9e3ed339bd376c">x1</link>&#32;=&#32;x1;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ac06a1294e15a50001ba99cf72749a137">vectors</link>[<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>].<link linkend="_struct_vector_1af2a4bde7e1b01cf2f420295ee22cf94f">y1</link>&#32;=&#32;<link linkend="__i2_c__camera_sensor_8h_1aed89bd71aee8be823e8a20ec4e093c1e">HEIGHT</link>&#32;-&#32;y1;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ac06a1294e15a50001ba99cf72749a137">vectors</link>[<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>].<link linkend="_struct_vector_1aae5a12e607d0f782506d9e6ec6179c64">index</link>&#32;=&#32;vectorIndex;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>++;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;+=&#32;2&#32;+&#32;featureLength;&#32;<emphasis role="comment">//&#32;Move&#32;to&#32;the&#32;next&#32;feature</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00156"/>00156 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//ESP_LOGI(TAG,&#32;&quot;Invalid&#32;response&#32;from&#32;Pixy2&quot;);</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00158"/>00158 &#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00159"/>00159 }
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00160"/>00160 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00161"/><link linkend="__i2_c__camera_sensor_8h_1a159c619bbd072d296d8caf684332b02a">00161</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__i2_c__camera_sensor_8c_1a159c619bbd072d296d8caf684332b02a">getBestVectorLeft</link>(<link linkend="_struct_pixy2_lines">Pixy2Lines</link>&#32;*<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>,&#32;<link linkend="_struct_vector">Vector</link>&#32;*vec)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00162"/>00162 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00163"/>00163 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;maxLength&#32;=&#32;0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;minSlopeThreshold&#32;=&#32;0.35;&#32;&#32;<emphasis role="comment">//&#32;Lowered&#32;threshold&#32;to&#32;include&#32;nearly&#32;horizontal&#32;lines</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00165"/>00165 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00166"/>00166 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>;&#32;i++)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector">Vector</link>&#32;v&#32;=&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ac06a1294e15a50001ba99cf72749a137">vectors</link>[i];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;midpoint&#32;=&#32;(v.<link linkend="_struct_vector_1ad286c393328f04c2e7f2fdb721ae938b">x0</link>&#32;+&#32;v.<link linkend="_struct_vector_1a71f1089b13834924fe9e3ed339bd376c">x1</link>)&#32;/&#32;2.0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(midpoint&#32;&lt;=&#32;39)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dx&#32;=&#32;(double)(v.<link linkend="_struct_vector_1a71f1089b13834924fe9e3ed339bd376c">x1</link>&#32;-&#32;v.<link linkend="_struct_vector_1ad286c393328f04c2e7f2fdb721ae938b">x0</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dy&#32;=&#32;(double)(v.<link linkend="_struct_vector_1af2a4bde7e1b01cf2f420295ee22cf94f">y1</link>&#32;-&#32;v.<link linkend="_struct_vector_1a6d0d6247f5980e8894dd855a38bb113c">y0</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;slope&#32;=&#32;dx&#32;==&#32;0&#32;?&#32;INFINITY&#32;:&#32;dy&#32;/&#32;dx;&#32;&#32;<emphasis role="comment">//&#32;Handle&#32;vertical&#32;lines&#32;safely</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;length&#32;=&#32;sqrt(dx&#32;*&#32;dx&#32;+&#32;dy&#32;*&#32;dy);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;absSlope&#32;=&#32;fabs(slope);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00175"/>00175 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Consider&#32;vectors&#32;with&#32;very&#32;low&#32;slope&#32;if&#32;they&#32;are&#32;long&#32;enough</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((absSlope&#32;&gt;=&#32;minSlopeThreshold&#32;||&#32;length&#32;&gt;&#32;50)&#32;&amp;&amp;&#32;length&#32;&gt;&#32;maxLength)&#32;{&#32;&#32;<emphasis role="comment">//&#32;Arbitrary&#32;length&#32;threshold</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxLength&#32;=&#32;length;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*vec&#32;=&#32;v;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00183"/>00183 &#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;found;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00185"/>00185 }
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00186"/>00186 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00187"/>00187 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00188"/><link linkend="__i2_c__camera_sensor_8h_1a7a16c5ef87bf82cd88751462ced8c749">00188</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__i2_c__camera_sensor_8c_1a7a16c5ef87bf82cd88751462ced8c749">getBestVectorRight</link>(<link linkend="_struct_pixy2_lines">Pixy2Lines</link>&#32;*<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>,&#32;<link linkend="_struct_vector">Vector</link>&#32;*vec)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00190"/>00190 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;maxLength&#32;=&#32;0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00191"/>00191 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;minSlopeThreshold&#32;=&#32;0.35;&#32;&#32;<emphasis role="comment">//&#32;Consistent&#32;threshold&#32;with&#32;left&#32;vector&#32;function</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00192"/>00192 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00193"/>00193 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ada3cbc6e6df239bc17e5c729f7f9096e">numVectors</link>;&#32;i++)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector">Vector</link>&#32;v&#32;=&#32;<link linkend="__i2_c__sensor_control_8c_1add0400696ecb105e7b62b89241ff69ca">lines</link>-&gt;<link linkend="_struct_pixy2_lines_1ac06a1294e15a50001ba99cf72749a137">vectors</link>[i];
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;midpoint&#32;=&#32;(v.<link linkend="_struct_vector_1ad286c393328f04c2e7f2fdb721ae938b">x0</link>&#32;+&#32;v.<link linkend="_struct_vector_1a71f1089b13834924fe9e3ed339bd376c">x1</link>)&#32;/&#32;2.0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(midpoint&#32;&gt;&#32;39)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dx&#32;=&#32;(double)(v.<link linkend="_struct_vector_1a71f1089b13834924fe9e3ed339bd376c">x1</link>&#32;-&#32;v.<link linkend="_struct_vector_1ad286c393328f04c2e7f2fdb721ae938b">x0</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dy&#32;=&#32;(double)(v.<link linkend="_struct_vector_1af2a4bde7e1b01cf2f420295ee22cf94f">y1</link>&#32;-&#32;v.<link linkend="_struct_vector_1a6d0d6247f5980e8894dd855a38bb113c">y0</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;slope&#32;=&#32;dx&#32;==&#32;0&#32;?&#32;INFINITY&#32;:&#32;dy&#32;/&#32;dx;&#32;&#32;<emphasis role="comment">//&#32;Handle&#32;vertical&#32;lines&#32;safely</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;length&#32;=&#32;sqrt(dx&#32;*&#32;dx&#32;+&#32;dy&#32;*&#32;dy);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;absSlope&#32;=&#32;fabs(slope);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00202"/>00202 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((absSlope&#32;&gt;=&#32;minSlopeThreshold&#32;||&#32;length&#32;&gt;&#32;50)&#32;&amp;&amp;&#32;length&#32;&gt;&#32;maxLength)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxLength&#32;=&#32;length;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*vec&#32;=&#32;v;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00209"/>00209 &#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;found;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00211"/>00211 }
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00212"/>00212 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00213"/>00213 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00214"/>00214 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00215"/><link linkend="__i2_c__camera_sensor_8h_1ae51dba7e896d5485d4aaf8a4247438bb">00215</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__i2_c__camera_sensor_8c_1ae51dba7e896d5485d4aaf8a4247438bb">computeSpeedAndSteer</link>(<link linkend="_struct_vector">Vector</link>&#32;vecLeft,&#32;<link linkend="_struct_vector">Vector</link>&#32;vecRight,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;existsGoodVecLeft,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;existsGoodVecRight,&#32;<link linkend="_structpixy2_commands">pixy2Commands</link>&#32;*commands)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;uint8_t&#32;lastSteer&#32;=&#32;50;&#32;&#32;<emphasis role="comment">//&#32;Neutral&#32;position</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;uint8_t&#32;lastSpeed&#32;=&#32;0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00218"/>00218 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;frameWidth&#32;=&#32;78.0;&#32;&#32;<emphasis role="comment">//&#32;Frame&#32;width&#32;assumption</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00219"/>00219 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;frameHeight&#32;=&#32;52.0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00220"/>00220 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;frame_center&#32;=&#32;39.0;&#32;<emphasis role="comment">//&#32;Central&#32;position&#32;of&#32;the&#32;frame&#32;to&#32;respect</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Determine&#32;number&#32;of&#32;good&#32;vectors&#32;detected</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numVectors&#32;=&#32;(existsGoodVecLeft&#32;?&#32;1&#32;:&#32;0)&#32;+&#32;(existsGoodVecRight&#32;?&#32;1&#32;:&#32;0);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00223"/>00223 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(numVectors)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;vectors&#32;detected</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commands-&gt;<link linkend="_structpixy2_commands_1ac5ecf9eb16163cc0d3b89d49ae9d2838">computedSteerSetpoint</link>&#32;=&#32;lastSteer;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commands-&gt;<link linkend="_structpixy2_commands_1a6bab39ce3ec27c60ca9b440de6cc5e1c">computedSpeedSetpoint</link>&#32;=&#32;(uint8_t)(0.7&#32;*&#32;30);&#32;<emphasis role="comment">//&#32;Reduce&#32;speed&#32;significantly</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00230"/>00230 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vector">Vector</link>&#32;single_vec;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(existsGoodVecRight)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;single_vec&#32;=&#32;vecRight;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;single_vec&#32;=&#32;vecLeft;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00239"/>00239 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;slope&#32;of&#32;the&#32;detected&#32;vector</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;single_vec_slope&#32;=&#32;(float)(single_vec.<link linkend="_struct_vector_1af2a4bde7e1b01cf2f420295ee22cf94f">y1</link>&#32;-&#32;single_vec.<link linkend="_struct_vector_1a6d0d6247f5980e8894dd855a38bb113c">y0</link>)&#32;/&#32;(float)(single_vec.<link linkend="_struct_vector_1a71f1089b13834924fe9e3ed339bd376c">x1</link>&#32;-&#32;single_vec.<link linkend="_struct_vector_1ad286c393328f04c2e7f2fdb721ae938b">x0</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;single_vec_midpoint_x&#32;=&#32;(float)(single_vec.<link linkend="_struct_vector_1a71f1089b13834924fe9e3ed339bd376c">x1</link>&#32;+&#32;single_vec.<link linkend="_struct_vector_1ad286c393328f04c2e7f2fdb721ae938b">x0</link>)&#32;/&#32;2;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00243"/>00243 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;estimated_lane_width&#32;=&#32;78.0f;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;estimated_other_boundary_midpoint_x;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00246"/>00246 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(single_vec_slope&#32;&gt;&#32;0)&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;estimated_other_boundary_midpoint_x&#32;=&#32;single_vec_midpoint_x&#32;+&#32;estimated_lane_width;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;estimated_other_boundary_midpoint_x&#32;=&#32;single_vec_midpoint_x&#32;-&#32;estimated_lane_width;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00252"/>00252 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;lane_center_x&#32;=&#32;(single_vec_midpoint_x&#32;+&#32;estimated_other_boundary_midpoint_x)&#32;/&#32;2;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00254"/>00254 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;error&#32;=&#32;(lane_center_x&#32;-&#32;frame_center)&#32;/&#32;frame_center;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00256"/>00256 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Implement&#32;proportional-derivative&#32;control&#32;for&#32;steering</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Kp&#32;=&#32;0.8f;&#32;<emphasis role="comment">//&#32;Proportional&#32;gain&#32;(adjust&#32;as&#32;needed)</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Kd&#32;=&#32;0.2f;&#32;<emphasis role="comment">//&#32;Derivative&#32;gain&#32;(adjust&#32;as&#32;needed)</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00260"/>00260 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;last_error&#32;=&#32;0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;derivative&#32;=&#32;error&#32;-&#32;last_error;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;control_steer&#32;=&#32;-(Kp&#32;*&#32;error&#32;+&#32;Kd&#32;*&#32;derivative);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//float&#32;control_steer&#32;=&#32;-&#32;Kp&#32;*&#32;error;</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;last_error</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;last_error&#32;=&#32;error;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00267"/>00267 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;the&#32;steering&#32;angle&#32;is&#32;within&#32;the&#32;range&#32;[0,&#32;100]</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;steer&#32;=&#32;50&#32;+&#32;control_steer&#32;*&#32;50;&#32;<emphasis role="comment">//&#32;Map&#32;control_steer&#32;from&#32;[-1,&#32;1]&#32;to&#32;[0,&#32;100]</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commands-&gt;<link linkend="_structpixy2_commands_1ac5ecf9eb16163cc0d3b89d49ae9d2838">computedSteerSetpoint</link>&#32;=&#32;(uint8_t)fmax(0,&#32;fmin(100,&#32;steer));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00271"/>00271 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00274"/>00274 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;&#32;<emphasis role="comment">//&#32;Both&#32;vectors&#32;detected,&#32;calculate&#32;direct&#32;center</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;MidpointX0&#32;=&#32;(vecRight.<link linkend="_struct_vector_1ad286c393328f04c2e7f2fdb721ae938b">x0</link>&#32;+&#32;vecLeft.<link linkend="_struct_vector_1ad286c393328f04c2e7f2fdb721ae938b">x0</link>)&#32;/&#32;2.0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;MidpointX1&#32;=&#32;(vecRight.<link linkend="_struct_vector_1a71f1089b13834924fe9e3ed339bd376c">x1</link>&#32;+&#32;vecLeft.<link linkend="_struct_vector_1a71f1089b13834924fe9e3ed339bd376c">x1</link>)&#32;/&#32;2.0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;MidpointY0&#32;=&#32;(vecRight.<link linkend="_struct_vector_1a6d0d6247f5980e8894dd855a38bb113c">y0</link>&#32;+&#32;vecLeft.<link linkend="_struct_vector_1a6d0d6247f5980e8894dd855a38bb113c">y0</link>)&#32;/&#32;2.0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;MidpointY1&#32;=&#32;(vecRight.<link linkend="_struct_vector_1af2a4bde7e1b01cf2f420295ee22cf94f">y1</link>&#32;+&#32;vecLeft.<link linkend="_struct_vector_1af2a4bde7e1b01cf2f420295ee22cf94f">y1</link>)&#32;/&#32;2.0;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00281"/>00281 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;new_x&#32;=&#32;(MidpointX1&#32;-&#32;MidpointX0)&#32;/&#32;frameWidth;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;new_y&#32;=&#32;(MidpointY1&#32;-&#32;MidpointY0)&#32;/&#32;frameHeight;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00284"/>00284 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(new_y)&#32;&gt;&#32;0.01f)&#32;{&#32;<emphasis role="comment">//&#32;Avoid&#32;division&#32;by&#32;zero</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;gradient&#32;=&#32;new_x&#32;/&#32;new_y;&#32;<emphasis role="comment">//&#32;Calculate&#32;gradient</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Normalize&#32;the&#32;gradient&#32;to&#32;fit&#32;within&#32;the&#32;range&#32;of&#32;[-1,&#32;1]</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gradient&#32;=&#32;fmax(fmin(gradient,&#32;1),&#32;-1);&#32;<emphasis role="comment">//&#32;Clamping&#32;the&#32;value&#32;to&#32;[-1,&#32;1]&#32;if&#32;out&#32;of&#32;bounds</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Map&#32;gradient&#32;to&#32;steering&#32;setpoint&#32;range&#32;[0,&#32;100]</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commands-&gt;<link linkend="_structpixy2_commands_1ac5ecf9eb16163cc0d3b89d49ae9d2838">computedSteerSetpoint</link>&#32;=&#32;(uint8_t)(50&#32;-&#32;gradient&#32;*&#32;50);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Go&#32;straight</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commands-&gt;<link linkend="_structpixy2_commands_1ac5ecf9eb16163cc0d3b89d49ae9d2838">computedSteerSetpoint</link>&#32;=&#32;50;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00295"/>00295 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00298"/>00298 &#32;&#32;&#32;&#32;}
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00299"/>00299 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Adjust&#32;speed&#32;based&#32;on&#32;steer:&#32;more&#32;deviation&#32;from&#32;50,&#32;lower&#32;the&#32;speed</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00301"/>00301 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;steer_deviation&#32;=&#32;fabs(50.0f&#32;-&#32;(<emphasis role="keywordtype">float</emphasis>)commands-&gt;<link linkend="_structpixy2_commands_1ac5ecf9eb16163cc0d3b89d49ae9d2838">computedSteerSetpoint</link>);
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00302"/>00302 &#32;&#32;&#32;&#32;commands-&gt;<link linkend="_structpixy2_commands_1a6bab39ce3ec27c60ca9b440de6cc5e1c">computedSpeedSetpoint</link>&#32;=&#32;(uint8_t)(60&#32;-&#32;(steer_deviation&#32;/&#32;50.0f)&#32;*&#32;(60&#32;-&#32;25));
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00303"/>00303 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00304"/>00304 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Ensure&#32;the&#32;speed&#32;is&#32;within&#32;the&#32;allowable&#32;range</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00305"/>00305 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(commands-&gt;<link linkend="_structpixy2_commands_1a6bab39ce3ec27c60ca9b440de6cc5e1c">computedSpeedSetpoint</link>&#32;&gt;&#32;65)&#32;commands-&gt;<link linkend="_structpixy2_commands_1a6bab39ce3ec27c60ca9b440de6cc5e1c">computedSpeedSetpoint</link>&#32;=&#32;65;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(commands-&gt;computedSpeedSetpoint&#32;&lt;&#32;0)&#32;commands-&gt;computedSpeedSetpoint&#32;=&#32;0;</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00307"/>00307 
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00308"/>00308 &#32;&#32;&#32;&#32;lastSteer&#32;=&#32;commands-&gt;<link linkend="_structpixy2_commands_1ac5ecf9eb16163cc0d3b89d49ae9d2838">computedSteerSetpoint</link>;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;last&#32;known&#32;steer</emphasis>
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00309"/>00309 &#32;&#32;&#32;&#32;lastSpeed&#32;=&#32;commands-&gt;<link linkend="_structpixy2_commands_1a6bab39ce3ec27c60ca9b440de6cc5e1c">computedSpeedSetpoint</link>;
<anchor xml:id="__i2_c__camera_sensor_8c_source_1l00310"/>00310 }
</programlisting></section>
